/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface CzCard {
      'first': string;
      'last': string;
    }

    interface CzCategoryContainer {
      'image': string;
      'name': string;
    }

    interface CzCategory {
      'image': string;
      'name': string;
    }
  }


    interface HTMLCzCardElement extends StencilComponents.CzCard, HTMLStencilElement {}

    var HTMLCzCardElement: {
      prototype: HTMLCzCardElement;
      new (): HTMLCzCardElement;
    };
    

    interface HTMLCzCategoryContainerElement extends StencilComponents.CzCategoryContainer, HTMLStencilElement {}

    var HTMLCzCategoryContainerElement: {
      prototype: HTMLCzCategoryContainerElement;
      new (): HTMLCzCategoryContainerElement;
    };
    

    interface HTMLCzCategoryElement extends StencilComponents.CzCategory, HTMLStencilElement {}

    var HTMLCzCategoryElement: {
      prototype: HTMLCzCategoryElement;
      new (): HTMLCzCategoryElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'cz-card': JSXElements.CzCardAttributes;
    'cz-category-container': JSXElements.CzCategoryContainerAttributes;
    'cz-category': JSXElements.CzCategoryAttributes;
    }
  }

  namespace JSXElements {

    export interface CzCardAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }

    export interface CzCategoryContainerAttributes extends HTMLAttributes {
      'image'?: string;
      'name'?: string;
    }

    export interface CzCategoryAttributes extends HTMLAttributes {
      'image'?: string;
      'name'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'cz-card': HTMLCzCardElement
    'cz-category-container': HTMLCzCategoryContainerElement
    'cz-category': HTMLCzCategoryElement
  }

  interface ElementTagNameMap {
    'cz-card': HTMLCzCardElement;
    'cz-category-container': HTMLCzCategoryContainerElement;
    'cz-category': HTMLCzCategoryElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;